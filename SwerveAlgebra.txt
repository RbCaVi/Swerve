// xn and yn are the x and y positions of the wheels relative to the robot's center
// +x is right
// +y is forward
// each wheel has an x and y velocity (xvn and yvn)
// the velocities are combined into a (number of wheels*2)-dimensional space
// a point in this space is (xv1,yv1,xv2,yv2,...)
// dist^2 is a function of xv, yv and spin

// these are the target wheel velocities for a value of xv, yv, and spin
xvn=xv+yn*spin
yvn=yv-xn*spin

// sum(n=1->w,) means sum over all wheels

// this is the distance from the point in the velocity space for a value of xv, yv, and spin
dist^2=sum(n=1->w,(xv+yn*spin-xvn)^2+(yv-xn*spin-yvn)^2)

// the calculated control values (xv, yv, and spin) are the ones where the distance is minimized

// expand all parentheses
dist^2=sum(n=1->w,(xv+yn*spin-xvn)^2+(yv-xn*spin-yvn)^2)
dist^2=sum(n=1->w,(xv+yn*spin-xvn)*(xv+yn*spin-xvn)+(yv-xn*spin-yvn)*(yv-xn*spin-yvn))
dist^2=sum(n=1->w,
  +(xv+yn*spin-xvn)*(xv+yn*spin-xvn)
  +(yv-xn*spin-yvn)*(yv-xn*spin-yvn)
)
dist^2=sum(n=1->w,
  +xv*(xv+yn*spin-xvn)+yn*spin*(xv+yn*spin-xvn)-xvn*(xv+yn*spin-xvn)
  +yv*(yv-xn*spin-yvn)-xn*spin*(yv-xn*spin-yvn)-yvn*(yv-xn*spin-yvn)
)
dist^2=sum(n=1->w,
  +xv*(xv+yn*spin-xvn)
  +yv*(yv-xn*spin-yvn)
  +yn*spin*(xv+yn*spin-xvn)
  -xn*spin*(yv-xn*spin-yvn)
  -xvn*(xv+yn*spin-xvn)
  -yvn*(yv-xn*spin-yvn)
)
// flip signs
dist^2=sum(n=1->w,
  +xv*(xv+yn*spin-xvn)
  +yv*(yv-xn*spin-yvn)
  +yn*spin*(xv+yn*spin-xvn)
  +xn*spin*(-yv+xn*spin+yvn)
  +xvn*(-xv-yn*spin+xvn)
  +yvn*(-yv+xn*spin+yvn)
)
dist^2=sum(n=1->w,
  +xv*xv+xv*yn*spin-xv*xvn
  +yv*yv-yv*xn*spin-yv*yvn
  +yn*spin*xv+yn*spin*yn*spin-yn*spin*xvn
  -xn*spin*yv+xn*spin*xn*spin+xn*spin*yvn
  -xvn*xv-xvn*yn*spin+xvn*xvn
  -yvn*yv+yvn*xn*spin+yvn*yvn
)
dist^2=sum(n=1->w,
  +xv*xv
  +yv*yv
  -xv*xvn*2
  -yv*yvn*2
  +xvn*xvn
  +yvn*yvn
  +yn*xv*spin*2
  -yv*xn*spin*2
  +xn*xn*spin*spin
  +yn*yn*spin*spin
  +xn*spin*yvn*2
  -yn*spin*xvn*2
)





// the minimum is where the derivatives with respect to all variables (xv, yv, and spin) are 0

// take the derivative with respect to xv
d/dxv*dist^2=sum(n=1->w,
  +d/dxv*xv*xv
  +d/dxv*yv*yv
  -d/dxv*xv*xvn*2
  -d/dxv*yv*yvn*2
  +d/dxv*xvn*xvn
  +d/dxv*yvn*yvn
  +d/dxv*yn*xv*spin*2
  -d/dxv*yv*xn*spin*2
  +d/dxv*xn*xn*spin*spin
  +d/dxv*yn*yn*spin*spin
  +d/dxv*xn*spin*yvn*2
  -d/dxv*yn*spin*xvn*2
)
d/dxv*dist^2=sum(n=1->w,
  +d/dxv*xv*xv
  -d/dxv*xv*xvn*2
  +d/dxv*yn*xv*spin*2
)
d/dxv*dist^2=sum(n=1->w,
  +xv*2
  -xvn*2
  +yn*spin*2
)

// take the derivative with respect to yv
d/dyv*dist^2=sum(n=1->w,
  +d/dyv*xv*xv
  +d/dyv*yv*yv
  -d/dyv*xv*xvn*2
  -d/dyv*yv*yvn*2
  +d/dyv*xvn*xvn
  +d/dyv*yvn*yvn
  +d/dyv*yn*xv*spin*2
  -d/dyv*yv*xn*spin*2
  +d/dyv*xn*xn*spin*spin
  +d/dyv*yn*yn*spin*spin
  +d/dyv*xn*spin*yvn*2
  -d/dyv*yn*spin*xvn*2
)
d/dyv*dist^2=sum(n=1->w,
  +d/dyv*yv*yv
  -d/dyv*yv*yvn*2
  -d/dyv*yv*xn*spin*2
)
d/dyv*dist^2=sum(n=1->w,
  +yv*2
  -yvn*2
  -xn*spin*2
)

// take the derivative with respect to spin
d/dspin*dist^2=sum(n=1->w,
  +d/dspin*xv*xv
  +d/dspin*yv*yv
  -d/dspin*xv*xvn*2
  -d/dspin*yv*yvn*2
  +d/dspin*xvn*xvn
  +d/dspin*yvn*yvn
  +d/dspin*yn*xv*spin*2
  -d/dspin*yv*xn*spin*2
  +d/dspin*xn*xn*spin*spin
  +d/dspin*yn*yn*spin*spin
  +d/dspin*xn*spin*yvn*2
  -d/dspin*yn*spin*xvn*2
)
d/dspin*dist^2=sum(n=1->w,
  +d/dspin*yn*xv*spin*2
  -d/dspin*yv*xn*spin*2
  +d/dspin*xn*xn*spin*spin
  +d/dspin*yn*yn*spin*spin
  +d/dspin*xn*spin*yvn*2
  -d/dspin*yn*spin*xvn*2
)
d/dspin*dist^2=sum(n=1->w,
  +yn*xv*2
  -yv*xn*2
  +xn*xn*spin*2
  +yn*yn*spin*2
  +xn*yvn*2
  -yn*xvn*2
)




// set the derivative with respect to xv to 0
0=sum(n=1->w,
  +xv*2
  -xvn*2
  +yn*spin*2
)
// split the sum
0=
  +sum(n=1->w,xv*2)
  -sum(n=1->w,xvn*2)
  +sum(n=1->w,yn*spin*2)
// move non-(xn,yn,xvn,yvn) factors out of the sum
0=
  +sum(n=1->w,1)*xv*2
  -sum(n=1->w,xvn)*2
  +sum(n=1->w,yn)*spin*2
// sum(n=1->w,1)=w
0=
  +w*xv*2
  -sum(n=1->w,xvn)*2
  +sum(n=1->w,yn)*spin*2
// remove the factor of 2
0=
  +w*xv
  -sum(n=1->w,xvn)
  +sum(n=1->w,yn)*spin


// set the derivative with respect to yv to 0
0=sum(n=1->w,
  +yv*2
  -yvn*2
  -xn*spin*2
)
// split the sum
0=
  +sum(n=1->w,yv*2)
  -sum(n=1->w,yvn*2)
  -sum(n=1->w,xn*spin*2)
// move non-(xn,yn,xvn,yvn) factors out of the sum
0=
  +sum(n=1->w,1)*yv*2
  -sum(n=1->w,yvn)*2
  -sum(n=1->w,xn)*spin*2
// sum(n=1->w,1)=w
0=
  +w*yv*2
  -sum(n=1->w,yvn)*2
  -sum(n=1->w,xn)*spin*2
// remove the factor of 2
0=
  +w*yv
  -sum(n=1->w,yvn)
  -sum(n=1->w,xn)*spin


// set the derivative with respect to spin to 0
0=sum(n=1->w,
  +yn*xv*2
  -yv*xn*2
  +xn*xn*spin*2
  +yn*yn*spin*2
  +xn*yvn*2
  -yn*xvn*2
)
// split the sum
0=
  +sum(n=1->w,yn*xv*2)
  -sum(n=1->w,yv*xn*2)
  +sum(n=1->w,xn*xn*spin*2)
  +sum(n=1->w,yn*yn*spin*2)
  +sum(n=1->w,xn*yvn*2)
  -sum(n=1->w,yn*xvn*2)
// move non-(xn,yn,xvn,yvn) factors out of the sum
0=
  +sum(n=1->w,yn)*xv*2
  -sum(n=1->w,xn)*yv*2
  +sum(n=1->w,xn*xn)*spin*2
  +sum(n=1->w,yn*yn)*spin*2
  +sum(n=1->w,xn*yvn)*2
  -sum(n=1->w,yn*xvn)*2
// remove the factor of 2
0=
  +sum(n=1->w,yn)*xv
  -sum(n=1->w,xn)*yv
  +sum(n=1->w,xn*xn)*spin
  +sum(n=1->w,yn*yn)*spin
  +sum(n=1->w,xn*yvn)
  -sum(n=1->w,yn*xvn)




// the equations

0=
  +w*xv
  -sum(n=1->w,xvn)
  +sum(n=1->w,yn)*spin

0=
  +w*yv
  -sum(n=1->w,yvn)
  -sum(n=1->w,xn)*spin

0=
  +sum(n=1->w,yn)*xv
  -sum(n=1->w,xn)*yv
  +sum(n=1->w,xn*xn)*spin
  +sum(n=1->w,yn*yn)*spin
  +sum(n=1->w,xn*yvn)
  -sum(n=1->w,yn*xvn)





// solve for xv
0=
  +w*xv
  -sum(n=1->w,xvn)
  +sum(n=1->w,yn)*spin
// flip signs
0=
  -w*xv
  +sum(n=1->w,xvn)
  -sum(n=1->w,yn)*spin
// move xv to the other side
w*xv=
  +sum(n=1->w,xvn)
  -sum(n=1->w,yn)*spin
// divide by w
xv=(
  +sum(n=1->w,xvn)
  -sum(n=1->w,yn)*spin
)/w
// sum/w = average
xv=
  +avg(n=1->w,xvn)
  -avg(n=1->w,yn)*spin

// solve for yv
0=
  +w*yv
  -sum(n=1->w,yvn)
  -sum(n=1->w,xn)*spin
// flip signs
0=
  -w*yv
  +sum(n=1->w,yvn)
  +sum(n=1->w,xn)*spin
// move yv to the other side
w*yv=
  +sum(n=1->w,yvn)
  +sum(n=1->w,xn)*spin
// divide by w
yv=(
  +sum(n=1->w,yvn)
  +sum(n=1->w,xn)*spin
)/w
// sum/w = average
yv=
  +avg(n=1->w,yvn)
  +avg(n=1->w,xn)*spin

// solve for spin
0=
  +sum(n=1->w,yn)*xv
  -sum(n=1->w,xn)*yv
  +sum(n=1->w,xn*xn)*spin
  +sum(n=1->w,yn*yn)*spin
  +sum(n=1->w,xn*yvn)
  -sum(n=1->w,yn*xvn)
// divide by w and sum/w = average
0=
  +avg(n=1->w,yn)*xv
  -avg(n=1->w,xn)*yv
  +avg(n=1->w,xn*xn)*spin
  +avg(n=1->w,yn*yn)*spin
  +avg(n=1->w,xn*yvn)
  -avg(n=1->w,yn*xvn)
// substitute xv and yv
xv=avg(n=1->w,xvn)-avg(n=1->w,yn)*spin
yv=avg(n=1->w,yvn)+avg(n=1->w,xn)*spin
0=
  +avg(n=1->w,yn)*(avg(n=1->w,xvn)-avg(n=1->w,yn)*spin)
  -avg(n=1->w,xn)*(avg(n=1->w,yvn)+avg(n=1->w,xn)*spin)
  +avg(n=1->w,xn*xn)*spin
  +avg(n=1->w,yn*yn)*spin
  +avg(n=1->w,xn*yvn)
  -avg(n=1->w,yn*xvn)
// expand parentheses
0=
  +avg(n=1->w,yn)*avg(n=1->w,xvn)
  -avg(n=1->w,yn)*avg(n=1->w,yn)*spin
  -avg(n=1->w,xn)*avg(n=1->w,yvn)
  -avg(n=1->w,xn)*avg(n=1->w,xn)*spin
  +avg(n=1->w,xn*xn)*spin
  +avg(n=1->w,yn*yn)*spin
  +avg(n=1->w,xn*yvn)
  -avg(n=1->w,yn*xvn)
// group spin terms
0=
  -avg(n=1->w,yn)*avg(n=1->w,yn)*spin
  -avg(n=1->w,xn)*avg(n=1->w,xn)*spin
  +avg(n=1->w,xn*xn)*spin
  +avg(n=1->w,yn*yn)*spin
  +avg(n=1->w,yn)*avg(n=1->w,xvn)
  -avg(n=1->w,xn)*avg(n=1->w,yvn)
  +avg(n=1->w,xn*yvn)
  -avg(n=1->w,yn*xvn)
// move spin to the other side
  +avg(n=1->w,yn)*avg(n=1->w,yn)*spin
  +avg(n=1->w,xn)*avg(n=1->w,xn)*spin
  -avg(n=1->w,xn*xn)*spin
  -avg(n=1->w,yn*yn)*spin
=
  +avg(n=1->w,yn)*avg(n=1->w,xvn)
  -avg(n=1->w,xn)*avg(n=1->w,yvn)
  +avg(n=1->w,xn*yvn)
  -avg(n=1->w,yn*xvn)
// isolate spin
spin*(
  +avg(n=1->w,yn)*avg(n=1->w,yn)
  +avg(n=1->w,xn)*avg(n=1->w,xn)
  -avg(n=1->w,xn*xn)
  -avg(n=1->w,yn*yn)
)
=
  +avg(n=1->w,yn)*avg(n=1->w,xvn)
  -avg(n=1->w,xn)*avg(n=1->w,yvn)
  +avg(n=1->w,xn*yvn)
  -avg(n=1->w,yn*xvn)
// divide
spin=
(
  +avg(n=1->w,yn)*avg(n=1->w,xvn)
  -avg(n=1->w,xn)*avg(n=1->w,yvn)
  +avg(n=1->w,xn*yvn)
  -avg(n=1->w,yn*xvn)
)/(
  +avg(n=1->w,yn)*avg(n=1->w,yn)
  +avg(n=1->w,xn)*avg(n=1->w,xn)
  -avg(n=1->w,xn*xn)
  -avg(n=1->w,yn*yn)
)








xvn=xv+yn*spin
yvn=yv-xn*spin

anglen=atan(xvn/yvn)
anglen=atan((xv+yn*spin)/(yv-xn*spin))

d/dxv*anglen=d/dxv*atan((xv+yn*spin)/(yv-xn*spin))
d/dxv*anglen=(d/dxv*((xv+yn*spin)/(yv-xn*spin)))/(1+((xv+yn*spin)/(yv-xn*spin))^2)
d/dxv*anglen=((d/dxv*(xv+yn*spin))*(yv-xn*spin)-(xv+yn*spin)*(d/dxv*(yv-xn*spin)))/((1+((xv+yn*spin)/(yv-xn*spin))^2)*((yv-xn*spin)^2))
d/dxv*anglen=(yv-xn*spin)/((((yv-xn*spin)^2)+((xv+yn*spin)^2))
d/dxv*anglen=(yv-xn*spin)/((((yv-xn*spin)^2)+((xv+yn*spin)^2))

d/dyv*anglen=d/dyv*atan((xv+yn*spin)/(yv-xn*spin))
d/dyv*anglen=(d/dyv*((xv+yn*spin)/(yv-xn*spin)))/(1+((xv+yn*spin)/(yv-xn*spin))^2)
d/dyv*anglen=((d/dyv*(xv+yn*spin))*(yv-xn*spin)-(xv+yn*spin)*(d/dyv*(yv-xn*spin)))/((1+((xv+yn*spin)/(yv-xn*spin))^2)*((yv-xn*spin)^2))
d/dyv*anglen=-(xv+yn*spin)/((((yv-xn*spin)^2)+((xv+yn*spin)^2))
d/dyv*anglen=-(xv+yn*spin)/((((yv-xn*spin)^2)+((xv+yn*spin)^2))

d/dspin*anglen=d/dspin*atan((xv+yn*spin)/(yv-xn*spin))
d/dspin*anglen=(d/dspin*((xv+yn*spin)/(yv-xn*spin)))/(1+((xv+yn*spin)/(yv-xn*spin))^2)
d/dspin*anglen=((d/dspin*(xv+yn*spin))*(yv-xn*spin)-(xv+yn*spin)*(d/dspin*(yv-xn*spin)))/((1+((xv+yn*spin)/(yv-xn*spin))^2)*((yv-xn*spin)^2))
d/dspin*anglen=(yn*(yv-xn*spin)+(xv+yn*spin)*xn)/((((yv-xn*spin)^2)+((xv+yn*spin)^2))
d/dspin*anglen=(yn*(yv-xn*spin)+(xv+yn*spin)*xn)/((((yv-xn*spin)^2)+((xv+yn*spin)^2))



